package com.santosh.CollaborationBackEnd.dao.impl;

import java.util.Date;
import java.util.List;

import javax.transaction.Transactional;

import org.hibernate.SQLQuery;
import org.hibernate.SessionFactory;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import com.santosh.CollaborationBackEnd.dao.ChatForumDAO;
import com.santosh.CollaborationBackEnd.model.ChatForum;
import com.santosh.CollaborationBackEnd.model.ChatForumMessage;

@Repository("chatForumDAO")
@Transactional
public class ChatForumDAOImpl implements ChatForumDAO {
	
	private static final Logger log=LoggerFactory.getLogger(ChatForumDAOImpl.class);
	
	private SessionFactory sessionFactory;
	
	ChatForumDAOImpl(SessionFactory sessionFactory)
	{
		this.sessionFactory=sessionFactory;
	}

	public List<ChatForum> getAllChatForum() {
		log.debug("Getting all ChatForum");
		return sessionFactory.getCurrentSession().createQuery("from ChatForum").list();
	}

	public ChatForum getChatForumById(long chatForumId) {
		log.debug("Getting ChatForum with id:"+chatForumId);
		return (ChatForum) sessionFactory.getCurrentSession().createQuery("from ChatForum where chatForumId='"+chatForumId+"'").uniqueResult();
	}

	public boolean createChatForum(ChatForum chatForum) {
		log.debug("Creating new ChatForum");
		try
		{
			sessionFactory.getCurrentSession().save(chatForum);
			log.debug("ChatForum created");
			return true;
		}
		catch(Exception e)
		{
			log.debug("Error occured");
			return false;
		}
	}

	public boolean addMessage(ChatForumMessage chatForumMessage,long chatForumId) {
		log.debug("Start of method addMessaage : Adding Message to ChatForum");
		try
		{
			ChatForum chatForum=(ChatForum) sessionFactory.getCurrentSession().createQuery("from ChatForum where chatForumId='"+chatForumId+"'").uniqueResult();
			chatForumMessage.setMsgTime(new Date());
			chatForumMessage.setReportMessage('N');
			chatForum.getMessages().add(chatForumMessage);
			sessionFactory.getCurrentSession().update(chatForum);
			log.debug("Message added to ChatForum");
			return true;
		}
		catch(Exception e)
		{
			log.debug("Error occured while adding message to ChatForum");
			return false;
		}
	}

	public boolean removeChatForumMessage( long chatForumId) {
		try
		{
			String sql="delete from CHATFORUM_MSG where CHATFORUMID= :chatForumId and REPORTMESSAGE= :reportMsg";
			SQLQuery query=sessionFactory.getCurrentSession().createSQLQuery(sql);
			query.setParameter("chatForumId", chatForumId);
			query.setParameter("reportMsg", 'Y');
			query.executeUpdate();
			log.debug("Message removed");
			return true;
		}
		catch(Exception e)
		{
			log.debug("Error occured while removing Message");
			return false;
		}
	}

	public boolean deleteChatForum(ChatForum chatForum) {
		log.debug("Start of method deleteChatForum");
		try
		{
			sessionFactory.getCurrentSession().delete(chatForum);
			log.debug("ChatForum deleted");
			return true;
		}
		catch(Exception e)
		{
			log.debug("Error occured while deleting ChatForum");
			return false;
		}
	}

}